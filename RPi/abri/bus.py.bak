import serial
import time
import RPi.GPIO as gp
from threading import Thread


class Bus(Thread):
    def __init__(self):
        self.port = serial.Serial('/dev/ttyAMA0', baudrate=9600, timeout=.05)
        self.stop = 0
        self.g11 = 11
        self.g12 = 22
        self.a1 = 9
        self.b1 = 10
        self.c1 = 27
        self.d1 = 4
        self.g21 = 21
        self.g22 = 13
        self.a2 = 26
        self.b2 = 19
        self.c2 = 6
        self.d2 = 5
        self.g31 = 25
        self.g32 = 12
        self.a3 = 24
        self.b3 = 23
        self.c3 = 16
        self.d3 = 20

        gp.setup(g11,gp.OUT)
        gp.setup(a1,gp.OUT)
        gp.setup(b1,gp.OUT)
        gp.setup(g12,gp.OUT)
        gp.setup(c1,gp.OUT)
        gp.setup(d1,gp.OUT)

        gp.setup(g21,gp.OUT)
        gp.setup(a2,gp.OUT)
        gp.setup(b2,gp.OUT)
        gp.setup(g22,gp.OUT)
        gp.setup(c2,gp.OUT)
        gp.setup(d2,gp.OUT)

        gp.setup(g31,gp.OUT)
        gp.setup(a3,gp.OUT)
        gp.setup(b3,gp.OUT)
        gp.setup(g32,gp.OUT)
        gp.setup(c3,gp.OUT)
        gp.setup(d3,gp.OUT)

        gp.setmode(gp.BCM)
        gp.setwarnings(False)
        gp.setup(11, gp.OUT)
        gp.setup(9, gp.OUT)
        gp.setup(10, gp.OUT)
        Thread.__init__(self)

    def setStop(self):
        self.stop = 1
    
    def run(self):
        compte = 0
        gp.output(11, gp.LOW)
        gp.output(9, gp.HIGH)
        gp.output(10, gp.HIGH)
        while True:
            s = '%dm@' % (30-compte)
            self.port.write(b'{0}'.format(s))
            time.sleep(15)
            if compte <= 30:
                compte += 5
            else:
                compte = 0
            if self.stop == 1:
                break
        print "fin bus"

gp.setup(g,gp.OUT)
gp.setup(a,gp.OUT)
gp.setup(b,gp.OUT)
gp.setup(g2,gp.OUT)
gp.setup(c,gp.OUT)
gp.setup(d,gp.OUT)
gp.output(g,gp.LOW)
gp.output(g2,gp.HIGH)

gp.output(a,gp.LOW)
gp.output(b,gp.LOW)
gp.output(c,gp.LOW)
gp.output(d,gp.LOW)

time.sleep(10)
gp.output(a,gp.HIGH)
gp.output(b,gp.LOW)

time.sleep(1)
gp.output(a,gp.LOW)
gp.output(b,gp.HIGH)

time.sleep(1)
gp.output(a,gp.HIGH)
gp.output(b,gp.HIGH)

time.sleep(1)
gp.output(g,gp.HIGH)
gp.output(g2,gp.LOW)
gp.output(c,gp.LOW)
gp.output(d,gp.LOW)
time.sleep(1)
gp.output(c,gp.HIGH)
gp.output(d,gp.LOW)
time.sleep(1)
gp.output(c,gp.LOW)
gp.output(d,gp.HIGH)
time.sleep(1)
gp.output(c,gp.HIGH)
gp.output(d,gp.HIGH)
time.sleep(1)
gp.output(g2,gp.HIGH)
